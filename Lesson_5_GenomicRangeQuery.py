# https://app.codility.com/programmers/lessons/5-prefix_sums/genomic_range_query/

def solution(S, P, Q):
    M=len(P)
    result=[0]*M
    for i in range(M):
        s=S[P[i]:(Q[i]+1)]
        if 'A' in s:
            result[i]=1
        elif 'C' in s:
            result[i]=2
        elif 'G' in s:
            result[i]=3
        else:
            result[i]=4
    
    return result

# Testing
tempS=['A','C','G','T','AA','AC','AG','AT','CA','CC','CG','CT','GA','GC','GG','GT','TA','TC','TG','TT',
       'AAA','AAC','ACA','ACC','AAG','AGC','ACT',
       'GCCCATTA']
tempP=[[0],[0],[0],[0],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],
       [0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1],[0,0,0,1,1,2],[0,0,0,1,1,2],[0,0,0,1,1,2],
       [0,0,0,1,1,2],[0,0,0,1,1,2],[0,0,0,1,1,2],[0,0,0,1,1,2],
       [0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,5,5,5,6,6,7]]
tempQ=[[0],[0],[0],[0],[0,1,1],[0,1,1],[0,1,1],[0,1,1],[0,1,1],[0,1,1],[0,1,1],[0,1,1],[0,1,1],[0,1,1],
      [0,1,1],[0,1,1],[0,1,1],[0,1,1],[0,1,1],[0,1,1],[0,1,2,1,2,2],[0,1,2,1,2,2],[0,1,2,1,2,2],
      [0,1,2,1,2,2],[0,1,2,1,2,2],[0,1,2,1,2,2],[0,1,2,1,2,2],
      [0,1,2,3,4,5,6,7,1,2,3,4,5,6,7,2,3,4,5,6,7,3,4,5,6,7,4,5,6,7,5,6,7,6,7,7]]
for i in range(len(tempS)):        
    S=tempS[i] 
    P=tempP[i]
    Q=tempQ[i]
    for j in range(len(P)):
        print('A = ', S,'\t\tP = ', P[j],'\t\tQ = ', Q[j], '\t\tResult =', solution(S,P,Q),'\n')
